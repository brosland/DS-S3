package sk.uniza.fri.II008.s3.gui;

import java.awt.Graphics;
import java.awt.Graphics2D;

import sk.uniza.fri.II008.ISimulation;
import sk.uniza.fri.II008.s3.gui.animation.FactoryLayout;
import sk.uniza.fri.II008.s3.gui.animation.FactoryView;
import sk.uniza.fri.II008.s3.gui.animation.PaintingContext;
import sk.uniza.fri.II008.s3.model.Factory;
import sk.uniza.fri.II008.s3.FactoryReplication;
import sk.uniza.fri.II008.s3.FactorySimulation;

public class AnimationPanel extends javax.swing.JPanel implements Runnable
{
	private final FactorySimulation simulation;

	public AnimationPanel(FactorySimulation simulation)
	{
		this.simulation = simulation;

		initComponents();
		
		/** TODO Remove this, this automaticaly repaints this panel, should be otherwise. */
		Thread updateThread = new Thread(this);
		updateThread.setDaemon(true);
		updateThread.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
	
	@Override
	public void paintComponent(Graphics graphics)
	{
		FactoryReplication replication = simulation.getState() != ISimulation.State.STOPPED ? simulation.getCurrentReplication() : null;
		
		FactoryLayout layout = new FactoryLayout();
		FactoryView view = new FactoryView(layout, getSize().width, getSize().height);
		
		PaintingContext painter = new PaintingContext(view, (Graphics2D)graphics, layout, simulation.getFactory(), replication);
		painter.paint();
	}
	
	/** TODO Remove this, this automaticaly repaints this panel, should be otherwise. */
	@Override
	public void run() {
		try {
			while(true) {
				this.repaint();
				
				Thread.sleep(250);
			}
		} catch(InterruptedException e) {
			e.printStackTrace();
			return;
		}
	}
}
