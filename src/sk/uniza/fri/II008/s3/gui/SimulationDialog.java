package sk.uniza.fri.II008.s3.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

public abstract class SimulationDialog extends javax.swing.JDialog implements ActionListener
{
	public class InvalideArgumentException extends IllegalArgumentException
	{
		private final JComponent component;

		public InvalideArgumentException(JComponent component, String message)
		{
			super(message);

			this.component = component;
		}

		public JComponent getComponent()
		{
			return component;
		}
	}

	public static int VEHICLE_MIN = 1, VEHICLE_MAX = 100, EMPLOYEE_MIN = 1, EMPLOYEE_MAX = 100;

	public SimulationDialog(java.awt.Frame parent, boolean modal)
	{
		super(parent, modal);

		initComponents();
		setLocationRelativeTo(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        windowTitleLabel = new javax.swing.JLabel();
        replicationCountLabel = new javax.swing.JLabel();
        replicationCountTextField = new javax.swing.JTextField();
        maxTimestampLabel = new javax.swing.JLabel();
        maxTimestampTextField = new javax.swing.JTextField();
        vehicleCountLabel = new javax.swing.JLabel();
        vehicleCountTextField = new javax.swing.JTextField();
        employeeCountLabel = new javax.swing.JLabel();
        employeeCountTextField = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        stornoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Simulácia oceliarne");
        setModal(true);
        setResizable(false);

        windowTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        windowTitleLabel.setText("Simulácia oceliarne");

        replicationCountLabel.setText("Počet replikácii:");

        replicationCountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        replicationCountTextField.setText("100");

        maxTimestampLabel.setText("Dĺžka replikácie (počet dní):");

        maxTimestampTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxTimestampTextField.setText("365");

        vehicleCountLabel.setText("Počet vozidiel:");

        vehicleCountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        vehicleCountTextField.setText("4");

        employeeCountLabel.setText("Počet pracovníkov:");

        employeeCountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        employeeCountTextField.setText("1");

        confirmButton.setText("Vytvor");
        confirmButton.addActionListener(this);

        stornoButton.setText("Storno");
        stornoButton.addActionListener(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(windowTitleLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxTimestampLabel)
                            .addComponent(replicationCountLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxTimestampTextField)
                            .addComponent(replicationCountTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(confirmButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stornoButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vehicleCountLabel)
                            .addComponent(employeeCountLabel))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vehicleCountTextField)
                            .addComponent(employeeCountTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(windowTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(replicationCountLabel)
                    .addComponent(replicationCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxTimestampLabel)
                    .addComponent(maxTimestampTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicleCountLabel)
                    .addComponent(vehicleCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeCountLabel)
                    .addComponent(employeeCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stornoButton)
                    .addComponent(confirmButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	public int getReplicationCountValue()
	{
		try
		{
			int replicationCount = Integer.parseInt(replicationCountTextField.getText().trim());

			if (replicationCount <= 0)
			{
				throw new NumberFormatException();
			}

			return replicationCount;
		}
		catch (NumberFormatException ex)
		{
			throw new InvalideArgumentException(replicationCountTextField,
				"Počet replikácií zadajte ako celé kladné číslo.");
		}
	}

	public double getMaxTimestampValue()
	{
		try
		{
			int days = Integer.parseInt(maxTimestampTextField.getText().trim());

			if (days <= 0)
			{
				throw new NumberFormatException();
			}

			return days * 24 * 60 * 60 * 1f;
		}
		catch (NumberFormatException ex)
		{
			throw new InvalideArgumentException(maxTimestampTextField,
				"Dĺžku replikácie (pošet dní) zadajte ako celé číslo.");
		}
	}

	public int getVehicleCountValue()
	{
		try
		{
			int vehicleCount = Integer.parseInt(vehicleCountTextField.getText().trim());

			if (vehicleCount < VEHICLE_MIN || vehicleCount > VEHICLE_MAX)
			{
				throw new InvalideArgumentException(vehicleCountTextField,
					String.format("Počet vozidiel zadajte v rozpätí od %d do %d.", VEHICLE_MIN, VEHICLE_MAX));
			}

			return vehicleCount;
		}
		catch (NumberFormatException ex)
		{
			throw new InvalideArgumentException(vehicleCountTextField,
				"Počet vozidiel zadajte ako celé číslo.");
		}
	}

	public int getEmployeeCountValue()
	{
		try
		{
			int employeeCount = Integer.parseInt(employeeCountTextField.getText().trim());

			if (employeeCount < EMPLOYEE_MIN || employeeCount > EMPLOYEE_MAX)
			{
				throw new InvalideArgumentException(employeeCountTextField,
					String.format("Počet pracovníkov zadajte v rozpätí od %d do %d.", EMPLOYEE_MIN, EMPLOYEE_MAX));
			}

			return employeeCount;
		}
		catch (NumberFormatException ex)
		{
			throw new InvalideArgumentException(employeeCountTextField,
				"Počet pracovníkov zadajte ako celé číslo.");
		}
	}

	@Override
	public void actionPerformed(ActionEvent e)
	{
		if (confirmButton == e.getSource())
		{
			try
			{
				getReplicationCountValue();
				getMaxTimestampValue();
//				getFinishTimeValue();
				getVehicleCountValue();
				getEmployeeCountValue();

				onSubmit(this);
			}
			catch (InvalideArgumentException ex)
			{
				JOptionPane.showMessageDialog(null, ex.getMessage(),
					"Chyba pri vypĺňaní formulára", JOptionPane.WARNING_MESSAGE);

				ex.getComponent().requestFocus();
			}
		}
		else
		{
			dispose();
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel employeeCountLabel;
    private javax.swing.JTextField employeeCountTextField;
    private javax.swing.JLabel maxTimestampLabel;
    private javax.swing.JTextField maxTimestampTextField;
    private javax.swing.JLabel replicationCountLabel;
    private javax.swing.JTextField replicationCountTextField;
    private javax.swing.JButton stornoButton;
    private javax.swing.JLabel vehicleCountLabel;
    private javax.swing.JTextField vehicleCountTextField;
    private javax.swing.JLabel windowTitleLabel;
    // End of variables declaration//GEN-END:variables

	public abstract void onSubmit(SimulationDialog dialog);
}
